% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/finite_pop_sampling.R
\name{truepos_given_sample}
\alias{truepos_given_sample}
\alias{summary.truepos}
\title{Estimate distribution of true positives given sampling resuts}
\usage{
truepos_given_sample(samplepos, n, N, replicates = 1000)

\method{summary}{truepos}(object, alpha = 0.1, ...)
}
\arguments{
\item{samplepos}{Number of positives observed in sample}

\item{n}{Sample size}

\item{N}{Population size}

\item{replicates}{Number of replicates per tested true pos number}

\item{object}{Sample counts to summarise}

\item{alpha}{The confidence interval is (1-alpha)*100\% (i.e. alpha=0.1 =>
90\% CI)}

\item{...}{Additional arguments (currently ignored)}
}
\value{
a vector containing population true positive counts that could have
  generated the observed number of sample positives. It has class
  \code{truepos}.
}
\description{
Estimate distribution of true positives given sampling resuts
}
\details{
The idea is to generate random realisations for all possible numbers
  of true positives, choose only those cases that resulted in the observed
  number of sample positives, and then use that empirical distribution of
  simulated true positives to estimate the most likely value of the (unknown)
  number of true positives.

  NB what we are doing here effectively is to estimate the unknown parameter,
  \code{m}, of the \code{\link[stats]{Hypergeometric}} distribution, i.e.
  the number of white balls in the urn.
}
\examples{
# Imagine we have sampled 10 profiles from a tract of 48 and found 2 LHNs
tps=truepos_given_sample(samplepos = 2, n=10, N=48)

hist(tps, breaks=0:49-.5, col='red')
plot(ecdf(tps))

# the mode should be the Maximum Likelihood Estimate
# (if enough replicates were used)
summary(tps)
# 95\% confidence interval
summary(tps, alpha=.05)

}
\seealso{
Other population-sampling: \code{\link{prop.ci}},
  \code{\link{required.sample.size}},
  \code{\link{sample_finite_population}}
}
